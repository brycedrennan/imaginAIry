name: Python Checks
on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:
env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1
  CACHE_PATHS: |
          ~/.cache/huggingface
          ~/.cache/clip
          ~/.cache/imaginairy
          ~/.cache/torch

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.9
      - name: Cache dependencies
        uses: actions/cache@v3.2.4
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements-dev.txt') }}-lint
      - name: Install Ruff
        if: steps.cache.outputs.cache-hit != 'true'
        run: grep -E 'ruff==' requirements-dev.txt | xargs pip install
      - name: Lint
        run: |
          echo "::add-matcher::.github/pylama_matcher.json"
          ruff --config tests/ruff.toml .
  autoformat:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4.5.0
        with:
          python-version: 3.9
      - name: Cache dependencies
        uses: actions/cache@v3.2.4
        id: cache
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements-dev.txt') }}-autoformat
      - name: Install Black
        if: steps.cache.outputs.cache-hit != 'true'
        run: grep -E 'black==' requirements-dev.txt | xargs pip install
      - name: Lint
        run: |
          black --diff --fast .
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.10"]
        subset: ["1/10", "2/10", "3/10", "4/10", "5/10", "6/10", "7/10", "8/10", "9/10", "10/10"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: requirements-dev.txt
    - name: Install dependencies
      run: |
        python -m pip install torch==1.13.1+cpu -f https://download.pytorch.org/whl/torch_stable.html
        python -m pip install -r requirements-dev.txt .
    - name: Get current date
      id: date
      run: echo "::set-output name=curmonth::$(date +'%Y-%m')"
    - name: Cache Model Files
      id: cache-model-files
      uses: actions/cache/restore@v3
      with:
        path: ${{ env.CACHE_PATHS }}
        key: ${{ steps.date.outputs.curmonth }}-b
    # Generate initial file list for all directories
    - name: Generate initial model file list
      run: |
        for dir in $CACHE_PATHS; do
          if [ -d "$dir" ]; then
            find $dir
          fi
        done > initial_file_list.txt
    - name: Test with pytest
      timeout-minutes: 20
      run: |
        pytest --durations=50 -v --subset ${{ matrix.subset }}
    # Generate final file list and check for new files
    - name: Generate final model file list
      run: |
        for dir in CACHE_PATHS; do
          if [ -d "$dir" ]; then
            find $dir
          fi
        done > final_file_list.txt
        if ! diff initial_file_list.txt final_file_list.txt > /dev/null; then
          echo "New files detected."
          echo "new_files=true" >> $GITHUB_ENV
        else
          echo "No new files detected."
        fi
    - uses: actions/cache/save@v3
      id: cache
      if: env.new_files == 'true'
      with:
        path: ${{ env.CACHE_PATHS }}
        key: ${{ steps.date.outputs.curmonth }}-b